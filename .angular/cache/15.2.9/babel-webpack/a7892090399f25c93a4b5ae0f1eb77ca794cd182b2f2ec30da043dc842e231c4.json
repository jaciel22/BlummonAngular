{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class UsersService {\n  constructor(http) {\n    this.http = http;\n    this.urlMensajes = 'http://localhost:8080';\n    //urlLogin = 'http://localhost:8080/login';\n    //url='https://9fed-201-162-240-101.ngrok-free.app/messages';\n    this.urlLogin = 'https://2a8b-192-141-244-137.ngrok-free.app/login';\n    console.log('Servicio usuarios');\n  }\n  getUsers() {\n    // Manejar la situación donde no se pudo obtener el companyId\n    return this.http.get(this.urlMensajes);\n  }\n}\n_class = UsersService;\n_class.ɵfac = function UsersService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.HttpClient));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;;AAOA,OAAM,MAAOA,YAAY;EAMvBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IALxB,gBAAW,GAAG,uBAAuB;IACrC;IACA;IACA,aAAQ,GAAG,mDAAmD;IAG5DC,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC;EACjC;EAEDC,QAAQ;IAGN;IACA,OAAO,IAAI,CAACH,IAAI,CAACI,GAAG,CAAC,IAAI,CAACC,WAAW,CAAC;EACxC;;SAfWP,YAAY;;mBAAZA,MAAY;AAAA;;SAAZA,MAAY;EAAAQ,SAAZR,MAAY;EAAAS,YAFX;AAAM","names":["UsersService","constructor","http","console","log","getUsers","get","urlMensajes","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\dell\\Documents\\Documentos\\Proyectos\\ExamenBlumonPay\\Angular\\BlummonAngular\\BlummonAngular\\src\\app\\services\\users.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UsersService {\n  urlMensajes = 'http://localhost:8080';\n  //urlLogin = 'http://localhost:8080/login';\n  //url='https://9fed-201-162-240-101.ngrok-free.app/messages';\n  urlLogin = 'https://2a8b-192-141-244-137.ngrok-free.app/login'\n  router: any;\n  constructor(private http: HttpClient) {\n    console.log('Servicio usuarios');\n   }\n\n  getUsers() {\n  \n\n    // Manejar la situación donde no se pudo obtener el companyId\n    return this.http.get(this.urlMensajes);\n  }\n}\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}